# -*- coding: utf-8 -*-
"""Datos/Pruebas iniciales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15WeH4LP6zM1zCEqeWUcyCuBGDpp1ogEP
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/drive/MyDrive/06_Salud/Xaris_Perez/datos/data.csv')
df.head()

print("Dimensiones del dataset:", df.shape)
print("\nTipos de datos:")
print(df.dtypes)

print("Dimensiones del dataset:", df.shape)
print("\nTipos de datos:")
print(df.dtypes)

print("Información general:")
print(df.info())

print("Valores nulos por columna:")
print(df.isnull().sum())

print("Resumen estadístico:")
print(df.describe())

variables_clave = ['F.Nac.', 'N° Mat', 'N° AC', 'N° NA', 'N° CP', 'N° BA', 'N° Cr', 'N° Cr.NA', 'Deuda Actual', 'target']
print(df[variables_clave].describe())

import matplotlib.pyplot as plt
#Estudiantes con problemas academicos
df[['N° Mat', 'N° NA', 'N° Cr.NA']].hist(bins=20, figsize=(12,6))
plt.show()

import seaborn as sns
#corregir por tipo de dato!!!
plt.figure(figsize=(10,5))
sns.boxplot(data=df[['Deuda Actual', 'N° AC']])
plt.show()

df['Res.'].unique()

#Conversion de variables
df['Deuda Actual'] = df['Deuda Actual'].map({'low': 1, 'medium': 2, 'high': 3}).fillna(0)
df['Donativos'] = df['Donativos'].map({'low': 1, 'medium': 2, 'high': 3}).fillna(0)
df['Desc. Becas'] = df['Desc. Becas'].map({'low': 1, 'medium': 2, 'high': 3}).fillna(0)
df['Sexo'] = df['Sexo'].map({'F': 0, 'M': 1}).fillna(-1)
df['Res.'] = df['Res.'].map({'Ext.': 0, 'Int.': 1}).fillna(-1)
df['Tipo'] = df['Tipo'].apply(lambda x: 1 if x == 'NORMAL' else 0)
df['Pais'] = df['Pais'].apply(lambda x: 0 if x == 'México' else 1)
df['Rel.'] = df['Rel.'].apply(lambda x: 0 if x == 'ASD' else 1)


#no olvidar NaN, todo lo demas 0
df['TPT'] = df['TPT'].map({'1.Favorable': 0, '2.Limitado': 1, '3.Moderado': 2, '4.Riesgo': 3, '5.Invalidado': 4}).fillna(4)

df['TPT'].value_counts()

df_numerico = df.drop(columns=['Facultad', 'Carrera', 'Estado', 'N° Cr.NA', 'N° CP']).copy()


import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
sns.heatmap(df_numerico.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.show()

print(df.isnull().sum())

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
df['Sexo'] = label_encoder.fit_transform(df['Sexo'])

df = pd.get_dummies(df, columns=['Facultad', 'Carrera', 'Estado'], drop_first=True)

df['Tasa_Aprobacion'] = df['N° CP'] / df['N° Mat']

#Deserción según la deuda
plt.figure(figsize=(8,5))
sns.boxplot(data=df, x='target', y='Deuda Actual', palette='coolwarm')
plt.xticks([0, 1], ['Desertaron', 'Continuaron'])
plt.title('Deuda Actual vs Deserción')
plt.show()

#Deserción de nacionalidad
plt.figure(figsize=(6,4))
sns.countplot(data=df, x='Pais', hue='target', palette='coolwarm')
plt.xticks([0, 1], ['México', 'Extranjero'])
plt.legend(['Continuaron', 'Desertaron'])
plt.title('Deserción por Nacionalidad')
plt.show()

plt.figure(figsize=(6,4))
sns.countplot(data=df, x='Sexo', hue='target', palette='coolwarm')
plt.xticks([0, 1], ['Mujeres', 'Hombres'])
plt.legend(['Continuaron', 'Desertaron'])
plt.title('Deserción por Sexo')
plt.show()

plt.figure(figsize=(8,5))
sns.countplot(data=df, x='Rel.', hue='target', palette='coolwarm')
plt.xticks([0, 1], ['ASD', 'Otros'])
plt.legend(['Continuaron', 'Desertaron'])
plt.title('Deserción por Religión')
plt.show()